<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xu.ssm.mapper.MessageMapper">
  <resultMap id="BaseResultMap" type="com.xu.ssm.po.Message">
    <id column="messageid" jdbcType="INTEGER" property="messageid" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="musicid" jdbcType="INTEGER" property="musicid" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="reply" jdbcType="INTEGER" property="reply" />
  </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    messageid, userid, musicid, comment, time, reply
  </sql>
  
  <select id="selectByExample" parameterType="com.xu.ssm.po.MessageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_message
    where messageid = #{messageid,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_message
    where messageid = #{messageid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xu.ssm.po.MessageExample">
    delete from tb_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insert" parameterType="com.xu.ssm.po.Message">
    insert into tb_message (messageid, userid, musicid, 
      comment, time, reply
      )
    values (#{messageid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{musicid,jdbcType=INTEGER}, 
      #{comment,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, #{reply,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xu.ssm.po.Message">
    insert into tb_message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="messageid != null">
        messageid,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="musicid != null">
        musicid,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="reply != null">
        reply,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="messageid != null">
        #{messageid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="musicid != null">
        #{musicid,jdbcType=INTEGER},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="reply != null">
        #{reply,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <select id="countByExample" parameterType="com.xu.ssm.po.MessageExample" resultType="java.lang.Long">
    select count(*) from tb_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_message
    <set>
      <if test="record.messageid != null">
        messageid = #{record.messageid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.musicid != null">
        musicid = #{record.musicid,jdbcType=INTEGER},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.reply != null">
        reply = #{record.reply,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_message
    set messageid = #{record.messageid,jdbcType=INTEGER},
      userid = #{record.userid,jdbcType=INTEGER},
      musicid = #{record.musicid,jdbcType=INTEGER},
      comment = #{record.comment,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP},
      reply = #{record.reply,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xu.ssm.po.Message">
    update tb_message
    <set>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="musicid != null">
        musicid = #{musicid,jdbcType=INTEGER},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="reply != null">
        reply = #{reply,jdbcType=INTEGER},
      </if>
    </set>
    where messageid = #{messageid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xu.ssm.po.Message">
    update tb_message
    set userid = #{userid,jdbcType=INTEGER},
      musicid = #{musicid,jdbcType=INTEGER},
      comment = #{comment,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      reply = #{reply,jdbcType=INTEGER}
    where messageid = #{messageid,jdbcType=INTEGER}
  </update>
 </mapper>